[manifest]
version = "1.0.0"
dump_lua = true
priority = -2

[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''G.PROFILES[G.SETTINGS.profile].name = "P"..G.SETTINGS.profile'''
position = "at"
payload = '''G.PROFILES[G.SETTINGS.profile].name = "MP"..G.SETTINGS.profile:match("/([^/]*)$")'''
match_indent = true
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = 'profile_data.name = profile_data.name or ("P".._profile)'
position = "at"
payload = 'profile_data.name = profile_data.name or ("MP".._profile:match("/([^/]*)$"))'
match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/button_callbacks.lua'
pattern = '''if i ~= G.focused_profile and love.filesystem.getInfo(i..'/'..'profile.jkr') then G:load_profile(i) end'''
position = "before"
payload = '''i = ModProfiles.profiles_prefix..i'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'game.lua'
pattern = '''self:load_profile(G.SETTINGS.profile or 1)'''
position = "at"
payload = '''
G.PROFILES = {}
ModProfiles = ModProfiles or {}
ModProfiles.profiles_prefix = "Profiles/"

local data_info = love.filesystem.getInfo("mod_profiles/data", "file")
if data_info then
    local data = love.filesystem.read("mod_profiles/data")
    ModProfiles.profiles_prefix = ModProfiles.profiles_prefix..data.."/"
end

if Cryptid then 
    Cryptid.profile_prefix = Jen and "J" or "M"
    ModProfiles.profiles_prefix = ModProfiles.profiles_prefix..Cryptid.profile_prefix
    Cryptid.profile_prefix = ModProfiles.profiles_prefix
    G.SETTINGS.profile = Cryptid.profile_prefix .. "1"
    for i = 1, 3 do
        print(Cryptid.profile_prefix .. i)
        G.PROFILES[Cryptid.profile_prefix .. i] = {}
    end
else
    G.SETTINGS.profile = ModProfiles.profiles_prefix.."1"
    for i = 1, 3 do
        print(ModProfiles.profiles_prefix..i)
        G.PROFILES[ModProfiles.profiles_prefix..i] = {}
    end
end
self:load_profile(G.SETTINGS.profile)'''
match_indent = true


[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/ui.lua"]'
pattern = '''{
    label = localize('b_mods'),
    chosen = true,
    tab_definition_function = function()
        return SMODS.GUI.DynamicUIManager.initTab({
            updateFunctions = {
                modsList = G.FUNCS.update_mod_list,
            },
            staticPageDefinition = SMODS.GUI.staticModListContent()
        })
    end
},'''
position = "after"
payload = '''{
    label = localize('b_mod_profiles'),
    chosen = false,
    tab_definition_function = function()
        return SMODS.GUI.DynamicUIManager.initTab({
            updateFunctions = {
                modsList = G.FUNCS.update_profile_list,
            },
            staticPageDefinition = ModProfiles.UI.staticModListContent()
        })
    end
},'''
match_indent = true

[[patches]]
[patches.pattern]
#target = '=[SMODS _ "src/crash_handler.lua"]'
target = 'main.lua'
pattern = '''-- Kill threads (makes restarting possible)'''
position = "after"
payload = '''if ModProfiles and ModProfiles.io_thread and ModProfiles.io_thread.channel then
                ModProfiles.io_thread.channel:push({
                    type = 'kill'
                })
            end'''
match_indent = true